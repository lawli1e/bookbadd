<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Booking Status</title>
    <style>
        /* Your CSS styles */
        /* This is just basic styling, you can customize it further */
        .status-table {
            max-width: 400px;
            margin: 0 auto;
            border-collapse: collapse;
        }
        .status-table th, .status-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        .status-table th {
            background-color: #f2f2f2;
        }
        .cancel-btn {
            background-color: #f44336;
            color: white;
            border: none;
            padding: 8px 16px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 14px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 4px;
        }
        .container {
            text-align: center;
        }
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap');
        *{
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            background-color: #eaebec;
        }
        li, a, button {
            font-family: 'Poppins', sans-serif;
            font-weight: 500;
            font-size: 16px;
            color: #000000;
            text-decoration: none;
        }
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 30px 10%;
        }
        .nav {
            display: flex; /* Add flexbox */
            justify-content: center; /* Center items horizontally */
            align-items: center; /* Center items vertically */
        }
        .nav_links{
            list-style: none;
            display: flex; /* Add flexbox */
            justify-content: center; /* Center items horizontally */
            align-items: center; /* Center items vertically */
        }
        .nav_links li {
            display: inline-block;
            padding: 0px 150px;
        }
        .nav_links li a {
            transition: all 0.3s ease 0s;
        }
        .nav_links li a:hover{
            color: #0088a9;
        }
        button{
            padding: 9px 25px;
            background-color: rgb(22, 204, 119);
            border: none;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease 0s;
        }
        button:hover{
            background-color: rgba(0, 136, 169, 0.8);
        }
        .divider {
            height: 2px; 
            background-color: #ccc;
            margin: 20px auto;
            width: 90%; 
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <ul class="nav_links">
                <li><a href="/reservation">Reservations</a></li>
                <li><a href="/bookingStatus">Booking</a></li>
                <li><a href="/payment">Payment</a></li>
                <li><a href="javascript:void(0)" id="logout">Logout</a></li>
            </ul>
        </nav>
    </header>
    <div class="divider"></div>
    <table class="status-table">
        <thead>
            <tr>
                <th>Court</th>
                <th>Date</th>
                <th>Time</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="pendingBookingTableBody">
        </tbody>
        
    </table>
    <br>
    <div class="container">
        <button onclick="redirectToBookingStatus()">Status booking</button>
    </div>

    <script>
        // Function to get the token from localStorage
        function getToken() {
            return localStorage.getItem('token');
        }
    
        // Function to fetch booking status from the server
        async function fetchBookingStatus(callback) {
            try {
                const pendingResponse = await fetch('/api/booking-status', {
                    headers: {
                        'Authorization': `Bearer ${getToken()}`
                    }
                });

                if (pendingResponse.ok) {
                    const pendingData = await pendingResponse.json();
                    callback(pendingData);
                } else {
                    console.error('Failed to fetch booking status');
                }
            } catch (error) {
                console.error('Error occurred while fetching booking status:', error);
            }
        }
    
        // Function to update the booking table with received data
        const updateBookingTable = async (pendingData) => {
            const tbody = document.getElementById('pendingBookingTableBody');
            tbody.innerHTML = ''; // Clear existing rows
            
            // Iterate over each booking and create a table row for it
            pendingData.forEach(booking => {
                const row = document.createElement('tr');
                const date = new Date(booking.date);
                const formattedDate = date.toISOString().split('T')[0]; // Extract YYYY-MM-DD
                
                // Include "Cancel" button for pending bookings
                row.innerHTML = `
                    <td>${booking.court}</td>
                    <td>${formattedDate}</td>
                    <td>${booking.time}</td>
                    <td>${booking.status}</td>
                    <td><button class="cancel-btn" onclick="cancelBooking('${booking.id}')">Cancel</button></td>
                `;
                
                tbody.appendChild(row);
            });
        }

        async function redirectToBookingStatus() {
            window.location.href = "/bookingStatus";
        }

        async function cancelBooking(bookingId) {
            try {
                const response = await fetch(`/api/cancel-booking/${bookingId}`, {
                    method: 'POST', // Use POST method instead of DELETE
                    headers: {
                        'Authorization': `Bearer ${getToken()}`
                    }
                });
                if (response.ok) {
                    console.log('Booking cancelled successfully');
                } else {
                    console.error('Failed to cancel booking');
                }
            } catch (error) {
                console.error('Error occurred while cancelling booking:', error);
            }
        }

        // Call fetchBookingStatus function when the page loads
        document.addEventListener('DOMContentLoaded', function() {
            fetchBookingStatus(updateBookingTable);
        });

        const logoutLink = document.getElementById("logout");
        if (logoutLink) {
            logoutLink.addEventListener("click", function(event) {
                event.preventDefault();
                localStorage.removeItem('token');
                window.location.href = "/login";
            });
        }
    </script>
</body>
</html>
